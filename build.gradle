buildscript {
    repositories {
        maven { url "http://repository.int.kn:8081/nexus/content/groups/public" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'KN-SWIFT'
version '1.0-SNAPSHOT'


sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated/source/jaxb'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

bootJar {
    baseName = 'pcip-integration'
    version =  '0.0.1'
}

configurations {
    jaxb //JAXB config
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//START - JAXB config
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated/source/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "${projectDir}/src/main/resources/wsdl/PCIP_ESB.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: "kn.swift.ms.pcip.dto") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
//END - JAXB config

repositories {
    maven { url "http://repository.int.kn:8081/nexus/content/groups/public" }
    mavenCentral()
}

dependencies {
    //START - JAXB config
    compile("org.springframework.ws:spring-ws-core:3.0.7.RELEASE")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
    //END - JAXB config
    compileOnly 'org.projectlombok:lombok:1.18.6'
    compile "org.springframework.boot:spring-boot-starter-integration:2.1.3.RELEASE"
    compile "org.springframework.integration:spring-integration-core:5.1.3.RELEASE"
    compile "org.springframework.integration:spring-integration-jms:5.1.3.RELEASE"
    compile "org.springframework:spring-web:5.1.3.RELEASE"
    compile "org.springframework:spring-core:5.1.5.RELEASE"
    compile "kn.int.swift:swift-wms-w001-client:R1801.1.0.1-RELEASE"
    compile "org.apache.activemq:activemq-client:5.15.8"
    compile "kn.int.swift:swift_mapforce:R1806.0.0.23-RELEASE"
    compile "org.apache.httpcomponents:httpclient:4.5.7"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.core:jackson-annotations"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner"
    compile "com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4"
    testCompile "org.springframework.boot:spring-boot-starter-test:2.1.3.RELEASE"
    testCompile "org.springframework:spring-beans:5.1.5.RELEASE"
    testCompile "junit:junit"
    testCompile "org.apache.activemq.tooling:activemq-junit:5.15.6"
    testCompile "org.apache.activemq:activemq-broker:5.15.8"
    testCompile "org.springframework.ws:spring-ws-test:3.0.7.RELEASE"
    compileOnly ("org.springframework.boot:spring-boot-configuration-processor:2.1.3.RELEASE") {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

}

tasks.withType(JavaExec) {
    standardInput = System.in
}


eclipse {
    project {
        natures += 'org.springframework.ide.eclipse.core.springnature'
    }
}

compileJava.dependsOn processResources,genJaxb